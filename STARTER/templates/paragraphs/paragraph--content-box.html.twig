{#
/**
 * @file
 * Content Box paragraph template.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('{{starter}}/foundation-reveal') }}
{{ attach_library('{{starter}}/foundation-sticky') }}
{{ attach_library('{{starter}}/socials') }}
{{ attach_library('{{starter}}/social-share-to') }}

{% set content_box__extra_classes = [
  paragraph.bundle|clean_class,
] %}

{% embed '@molecules/ContentBox/ContentBox.twig' with {
  content_box__has_share_buttons: has_share_buttons,
} %}
  {% block share_buttons %}
    {% include '@molecules/ShareButtons/ShareButtons.twig' with {
      share_buttons__title: teaser_title,
      share_buttons__url: page_url|url_encode,
      share_buttons__extra_classes: ['sticky', 'vertical'],
      share_buttons__attributes: {
        'data-sticky': 'data-sticky',
        'data-sticky-on': 'large',
        'data-margin-top': '5',
        'data-anchor': 'sticky-container',
        'data-margin-bottom': '1',
      },
    } %}
  {% endblock %}

  {% block content %}
    {{ content.field_subcomponents }}
  {% endblock %}
{% endembed %}
