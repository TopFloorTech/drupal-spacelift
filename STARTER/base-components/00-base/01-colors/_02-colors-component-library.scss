// These styles only affect the colors "Usage" page in the component library
.cl-colors {
  padding: 1rem;
}

.cl-colors__list {
  display: flex;
  flex-wrap: wrap;
  margin: 0 0 2rem;
  padding: 0;
}

.cl-colors__item {
  list-style: none;
  padding: 1rem 2rem;
  transition: all 0.4s;
  flex: 1 1 20%;
  min-width: 150px;
  min-height: 150px;
  display: flex;
  justify-content: center;
  align-items: flex-end;
}

// Dynamically set swatch text color based on the lightness of the background color
@function set-color(
  $color,
  $text-primary: accent-high,
  $text-secondary: muted
) {
  @if (lightness($color) > 50) {
    @return clr($text-primary);
  } @else {
    @return clr($text-secondary);
  }
}

// Style default color swatches
@each $name, $color in $defaultColors {
  .cl-colors__item--default {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

// Style dark color swatches
@each $name, $color in $darkColors {
  .cl-colors__item--dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color, muted, accent-high);
    }
  }
}

// Color Utility Classes
// TODO: Replace these with the clr() mixin
.white {
  color: $white;
}

.bg-light {
  background: $light-gray;

  + .bg-light {
    padding-top: 0; // this fixes the too much padding problem if two sections have bg-light in a row
  }
}

.bg-dark {
  background: $dark-gray;
}

.bg-yellow {
  background: $yellow;
}

.bg-dark-blue {
  background: $dark-blue;
}

.bg-blue {
  background: $blue;

}

.bg-blue, .bg-dark-blue, .bg-dark {
  color: $white;

  h2, h3, h4, h5, p, a {
    color: $white;
  }
}
