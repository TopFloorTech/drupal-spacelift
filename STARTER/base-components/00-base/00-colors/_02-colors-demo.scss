////
/// Styles used by Storybook to demonstrate the color palette
/// These styles are only compiled with Storybook - not the theme
////

.cl-colors {
  padding: 1rem;

  &-list {
    display: flex;
    flex-wrap: wrap;
    margin: 0 0 2rem;
    padding: 0;
  }

  &-item {
    align-items: flex-end;
    display: flex;
    flex: 1 1 20%;
    justify-content: center;
    list-style: none;
    min-height: 150px;
    min-width: 150px;
    padding: 1rem 2rem;
    transition: all 0.4s;
  }
}

/// Dynamically set swatch text color based on the lightness of the background color
@function set-color($color, $text-primary: text, $text-secondary: text-inverse) {
  @if (lightness($color) > 50) {
    @return color($text-primary);
  } @else {
    @return color($text-secondary);
  }
}

/// Style default color swatches
@each $name, $color in $defaultColors {
  .cl-colors-item--default {
    &-#{$name} {
      background-color: color($name);
      color: set-color($color);
    }
  }
}

/// Style dark color swatches
///@each $name, $color in $darkColors {
///  .cl-colors-item--dark {
///    &-#{$name} {
///      background-color: color($name);
///      color: set-color($color, text-inverse, text);
///    }
///  }
///}

/// Color Utility Classes
/// @todo See if these utility classes are needed by the components - move to theme src/scss/utilities.scss if so
.white {
  color: color(background);
}

.bg-light {
  background: color(background-section);

  + .bg-light {
    padding-top: 0; // this fixes the too much padding problem if two sections have bg-light in a row
  }
}

.bg-dark {
  background: color(text);
}

.bg-yellow {
  background: color(accent);
}

.bg-dark-blue {
  background: color(secondary-dark);
}

.bg-blue {
  background: color(secondary);
}

.bg-blue, .bg-dark-blue, .bg-dark {
  color: color(text-inverse);

  h2, h3, h4, h5, p, a {
    color: color(text-inverse);
  }
}
